{"ast":null,"code":"// src/context/AuthContext.js\nimport React,{createContext,useContext,useState}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>useContext(AuthContext);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const navigate=useNavigate();const login=(email,password)=>{if(email==='satarupa@gmail.com'&&password==='12345'){setUser({email,role:'admin'});navigate('/admin');}else{setUser({email,role:'user'});navigate('/');}};const logout=()=>{setUser(null);navigate('/login');};const authState={user,isAuthenticated:!!user,isAdmin:(user===null||user===void 0?void 0:user.role)==='admin'};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{authState,login,logout},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useNavigate","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","user","setUser","navigate","login","email","password","role","logout","authState","isAuthenticated","isAdmin","Provider","value"],"sources":["C:/Users/KIKA/OneDrive/Tài liệu/HTML/b-planet/b-planet/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const login = (email, password) => {\r\n    if (email === 'satarupa@gmail.com' && password === '12345') {\r\n      setUser({ email, role: 'admin' });\r\n      navigate('/admin');\r\n    } else {\r\n      setUser({ email, role: 'user' });\r\n      navigate('/');\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    navigate('/login');\r\n  };\r\n\r\n  const authState = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user?.role === 'admin',\r\n  };\r\n\r\n  return <AuthContext.Provider value={{ authState, login, logout }}>{children}</AuthContext.Provider>;\r\n};\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAClE,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE/C,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAO,OAAO,CAAGA,CAAA,GAAMN,UAAU,CAACK,WAAW,CAAC,CAEpD,MAAO,MAAM,CAAAE,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAAAW,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAW,KAAK,CAAGA,CAACC,KAAK,CAAEC,QAAQ,GAAK,CACjC,GAAID,KAAK,GAAK,oBAAoB,EAAIC,QAAQ,GAAK,OAAO,CAAE,CAC1DJ,OAAO,CAAC,CAAEG,KAAK,CAAEE,IAAI,CAAE,OAAQ,CAAC,CAAC,CACjCJ,QAAQ,CAAC,QAAQ,CAAC,CACpB,CAAC,IAAM,CACLD,OAAO,CAAC,CAAEG,KAAK,CAAEE,IAAI,CAAE,MAAO,CAAC,CAAC,CAChCJ,QAAQ,CAAC,GAAG,CAAC,CACf,CACF,CAAC,CAED,KAAM,CAAAK,MAAM,CAAGA,CAAA,GAAM,CACnBN,OAAO,CAAC,IAAI,CAAC,CACbC,QAAQ,CAAC,QAAQ,CAAC,CACpB,CAAC,CAED,KAAM,CAAAM,SAAS,CAAG,CAChBR,IAAI,CACJS,eAAe,CAAE,CAAC,CAACT,IAAI,CACvBU,OAAO,CAAE,CAAAV,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEM,IAAI,IAAK,OAC1B,CAAC,CAED,mBAAOZ,IAAA,CAACC,WAAW,CAACgB,QAAQ,EAACC,KAAK,CAAE,CAAEJ,SAAS,CAAEL,KAAK,CAAEI,MAAO,CAAE,CAAAR,QAAA,CAAEA,QAAQ,CAAuB,CAAC,CACrG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}